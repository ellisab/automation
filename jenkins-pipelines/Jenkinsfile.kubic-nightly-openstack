def kubicLib = library("kubic-jenkins-library@${env.BRANCH_NAME}").com.suse.kubic

// Configure the build properties
properties([
    buildDiscarder(logRotator(numToKeepStr: '31', daysToKeepStr: '31')),
    disableConcurrentBuilds(),
    pipelineTriggers([cron('H H(3-5) * * *')]),
    parameters([
        string(name: 'OPENSTACK_IMAGE', defaultValue: '', description: 'OpenStack Image To Use'),
        string(name: 'MASTER_COUNT', defaultValue: '3', description: 'Number of Master Nodes'),
        string(name: 'WORKER_COUNT', defaultValue: '25', description: 'Number of Worker Nodes'),
        string(name: 'ADMIN_FLAVOR', defaultValue: 'm1.xlarge', description: 'Flavor for Admin Node'),
        string(name: 'MASTER_FLAVOR', defaultValue: 'm1.xlarge', description: 'Flavor for Master Nodes'),
        string(name: 'WORKER_FLAVOR', defaultValue: 'm1.large', description: 'Flavor for Worker Nodes'),
        booleanParam(name: 'ENVIRONMENT_DESTROY', defaultValue: true, description: 'Destroy env once done?')
    ])
])

def openstackTypeOptions = kubicLib.OpenstackTypeOptions.new();
openstackTypeOptions.image = env.OPENSTACK_IMAGE
openstackTypeOptions.adminFlavor = env.ADMIN_FLAVOR
openstackTypeOptions.masterFlavor = env.MASTER_FLAVOR
openstackTypeOptions.workerFlavor = env.WORKER_FLAVOR

lock('openstack-single-user') {
    coreKubicProjectPeriodic(
        // Prefer m1.large workers, fallback to any leap42.3 worker.
        nodeLabel: 'leap42.3&&m1.large||leap42.3',
        environmentType: 'openstack',
        environmentTypeOptions: openstackTypeOptions,
        environmentDestroy: env.ENVIRONMENT_DESTROY.toBoolean(),
        masterCount: env.MASTER_COUNT.toInteger(),
        workerCount: env.WORKER_COUNT.toInteger()
    ) {
        // empty preBootstrapBody
    } {
        // Run through the upgrade orchestration
        upgradeEnvironmentStage1(
            environment: environment,
            fakeUpdatesAvailable: true
        )

        upgradeEnvironmentStage2(
            environment: environment
        )

        coreKubicProjectNodeTests(
            environment: environment
        )
    }
}
