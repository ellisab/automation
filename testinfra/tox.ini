[tox]
envlist = all
skipsdist = True

[testenv]
setenv =
   VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/requirements.txt
whitelist_externals = sh
sitepackages=False
envdir={toxworkdir}/kubic-testinfra
passenv=ENVIRONMENT_JSON

[testenv:admin]
# TODO: Remove once https://github.com/kubic-project/jenkins-library/pull/159 merges
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(admin or common) and bootstrapped" -v {posargs}

[testenv:master]
# TODO: Remove once https://github.com/kubic-project/jenkins-library/pull/159 merges
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(master or common) and bootstrapped" -v {posargs}

[testenv:worker]
# TODO: Remove once https://github.com/kubic-project/jenkins-library/pull/159 merges
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(worker or common) and bootstrapped" -v {posargs}

[testenv:admin-bootstrapped]
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(admin or common) and bootstrapped" -v {posargs}

[testenv:admin-unused]
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(admin or common) and unused" -v {posargs}

[testenv:admin-removed]
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(admin or common) and removed" -v {posargs}

[testenv:master-bootstrapped]
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(master or common) and bootstrapped" -v {posargs}

[testenv:master-unused]
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(master or common) and unused" -v {posargs}

[testenv:master-removed]
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(master or common) and removed" -v {posargs}

[testenv:worker-bootstrapped]
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(worker or common) and bootstrapped" -v {posargs}

[testenv:worker-unused]
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(worker or common) and unused" -v {posargs}

[testenv:worker-removed]
commands =
    pytest --connection ssh --ssh-config={env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} --sudo -m "(worker or common) and removed" -v {posargs}

[testenv:all]
commands =
    sh {toxinidir}/tools/testAllRoles.sh {env:ENVIRONMENT_JSON:{toxinidir}/../caasp-kvm/environment.json} {env:SSH_CONFIG:{toxinidir}/../misc-tools/environment.ssh_config} {posargs}

[testenv:linters]
deps = -r{toxinidir}/test-requirements.txt
commands = sh tools/pretty_flake8.sh
envdir={toxworkdir}/linters

[flake8]
ignore = D203
exclude =
    .git,
    __pycache__,
    build,
    .venv,
    .tox
